# vim:ft=gitconfig
[user]
    name = Kenny Pitt

[core]
    quotepath = false

[color]
    ui = auto

[push]
    default = upstream

[merge]
    summary = true

[alias]

    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit

    # View the current working tree status using the short format
    s = status -s
    sb = status -sb

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # Commit all changes
    ca = !git add -A && git commit -av

    # Switch to a branch, creating it if necessary
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # List aliases
    aliases = "!git config -l | grep '^alias\\.' | cut -c 7-"

    # Amend the currently staged files to the latest commit
    amend = commit --amend --reuse-message=HEAD

    # Shortcut for forcing a fast-forward merge
    ff = merge --ff-only

    ## Shortcuts for accessing remote repositories

    # Clone a repository including all submodules
    c = clone --recursive

    # Pull in remote changes for the current repository and all its submodules
    p = pull --recurse-submodules
    # Pull remote changes with fast-forward merge
    pff = pull --ff-only --recurse-submodules
    # Pull remote changes with rebase
    prb = pull --rebase --recurse-submodules

    # Fetch remote changes for the current repository and all its submodules
    f = fetch --prune --recurse-submodules

    # basic convenience shortcuts
    ci = commit
    co = checkout
 
    ## Shortcuts for working with submodules
    sm = submodule
    sma = submodule add
    smd = submodule deinit
    sms = submodule status --recursive
    smu = submodule update --init --recursive

    ## Shortcuts for update-index commands
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = !git ls-files -v | grep ^h | cut -c 3-
    assumeall = !git status -s | grep -v ^\\?\\? | awk {'print $2'} | xargs git assume
    unassumeall = !git assumed | xargs git update-index --no-assume-unchanged

    lock = update-index --skip-worktree
    unlock = update-index --no-skip-worktree
    locked = !git ls-files -v | grep ^S | cut -c 3-
    lockall = !git status -s | grep -v ^\\?\\? | awk {'print $2'} | xargs git lock
    unlockall = !git locked | xargs git update-index --no-skip-worktree
